I have only implemented the part where we are supposed to maximise the payoff, I could not get how to store total transaction of the data. It was unable to keep storing old info. Every new run of the code erased the past data. So, I have described only the part till which I have coded, kindly consider.
Since, usage of oops was not allowed, I have used structures to create separate classes(kind of) for product, which stores information corresponding to a product. Then, query, which stores information of the product demanded by the customer. Next is customer, which stores the information of a customer, including his budget, and the queries of product demanded by him. Then is the function declaration, then main function. As shopkeeper, I have to enter the information of the products that I have available. After that the main customer program starts that inputs the products demanded by the customer. I have used the vector of datatype customer to store information of the products demanded by the customer. Then, I have used another vector Payoff which stores the maximum payoff value corresponding to each customer. This maximum payoff value is returned by the function solve which uses recursion to recursively include the product if the selling price of the product is less than the budget of the customer. If the selling price is less than or equal to budget of the customer, then only its corresponding payoff value gets added. Ultimately, the maximum value of if the item was picked or not is added, so as to maximise payoff value.